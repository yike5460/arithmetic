Given a sorted linked list, delete all duplicates such that each element appear only once.

For example,
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3.

class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode **runner = &head;
 
        if(!head || !head->next) return head;
        while(*runner) {
            if((*runner)->next && (*runner)->next->val == (*runner)->val) {
                ListNode *temp = *runner;
                while(temp && (*runner)->val == temp->val) {
                    *runner = temp;
                    temp = temp->next;
                }
            } else runner = &((*runner)->next);
        }
        return head;
    }
};
