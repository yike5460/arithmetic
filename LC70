/*
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?
*/
class Solution {
public:
    /*
    this performance is not good enough since intermidiate result not stored.
    int max (int n) {
        if (n < 3) {
            return n;
        }
        return max(n-1)+max(n-2);
    }
    int climbStairs(int n) {
        if (n < 3) {
            return n;
        } else {
            return max(n);
        }
    }
    */
    int max (int n) {
        if (n < 3) {
            return n;
        }
        int first = 1;
        int second = 2;
        int cur = 3;
        for (int i=2; i<n; i++) {
            cur = second + first;
            first = second;
            second = cur;
        }
        return cur;
    }
    int climbStairs(int n) {
        if (n < 3) {
            return n;
        } else {
            return max(n);
        }
    }
};
